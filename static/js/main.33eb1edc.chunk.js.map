{"version":3,"sources":["components/Header.jsx","components/TallyInput.jsx","components/EventDisplay.jsx","components/TallyView.jsx","components/App.jsx","index.js"],"names":["Header","brandText","Navbar","bg","variant","expand","sticky","Brand","Toggle","aria-controls","Collapse","id","Nav","className","onSelect","selectedKey","console","log","Link","href","NavDropdown","title","Item","Divider","target","TallyInput","tallyConfigs","recordTally","Row","map","config","Col","xs","style","padding","Button","onClick","buttonLabel","lastEvent","paddingLeft","fontStyle","moment","fromNow","EventDisplay","event","label","Date","toLocaleDateString","undefined","hour","minute","day","month","year","defaultViewPrefs","combinedTallies","TallyView","tallyData","React","useState","viewPrefs","setViewPrefs","differentDay","dateString1","dateString2","date1","date2","getFullYear","getMonth","getDate","displayEvents","data","display","events","prevEvent","i","length","borderTop","push","paddingTop","Form","paddingBottom","Check","type","checked","onChange","allLabels","allEvents","forEach","tally","sort","a","b","displayEventsCombined","fontWeight","find","cloneDeep","require","App","defaultValue","key","stickyValue","window","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","useStickyState","displayName","setData","basename","path","tallyId","newData","tallyEvents","eventData","now","toISOString","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33eb1edc.chunk.js","sourcesContent":["import React from \"react\";\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nconst Header = ({brandText}) => {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\" sticky=\"top\">\n            <Navbar.Brand>{brandText}</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav\n                    className=\"container-fluid\"\n                    onSelect={(selectedKey) => {\n                        console.log(`selected ${selectedKey}`);\n                    }}\n                >\n                    <Nav.Link href=\"/tally/#/\">Counter</Nav.Link>\n                    <Nav.Link href=\"/tally/#/view\">View</Nav.Link>\n                    <NavDropdown title=\"Options\" id=\"basic-nav-dropdown\" className=\"ml-auto\">\n                        <NavDropdown.Item href=\"/4\">Config 4</NavDropdown.Item>\n                        <NavDropdown.Item href=\"/5\">Config 5</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"/share\">Share data</NavDropdown.Item>\n                        <NavDropdown.Item href=\"/config\">Configure</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"https://github.com/joecullin/tally\" target=\"_blank\">About</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n  \nexport default Header;","import React from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport moment from \"moment\";\n\nconst TallyInput = ({tallyConfigs, recordTally}) => {\n    return (\n        <Row>\n        {tallyConfigs.map(config => {\n            return (\n                <Col key={config.id} xs=\"12\" style={{\n                    padding: \"1em 0 1em 2em\",\n                }}>\n                    <div>\n                        <Button\n                            onClick={() => recordTally(config.id)}\n                        >\n                            {config.buttonLabel}\n                        </Button>\n                        {config.lastEvent &&\n                            <span style={{paddingLeft: \"1em\", fontStyle: \"italic\"}}>\n                                {\"last: \" + moment(config.lastEvent).fromNow()}\n                            </span>\n                        }\n                    </div>\n                </Col>\n            );\n        })}\n        </Row>\n    );\n};\n  \nexport default TallyInput;","import React from \"react\";\n// import moment from \"moment\";\n\nconst EventDisplay = ({event, label, style}) => {\n    const dateDisplaySpec = {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        day: \"numeric\",\n        month: \"short\",\n        year: \"numeric\",\n    };\n    return (\n        <span style={{\n            ...style,\n            padding: \".25em .5em\",\n        }}>\n            {(new Date(event)).toLocaleDateString(undefined, dateDisplaySpec)}\n            {label &&\n                <span style={{paddingLeft: \".5em\", fontStyle: \"italic\"}}>\n                &ndash; {label}\n                </span>\n            }\n        </span>\n    );\n};\n  \nexport default EventDisplay;","import React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport EventDisplay from \"./EventDisplay\";\n\nconst defaultViewPrefs = {\n    combinedTallies: true,\n};\n\nconst TallyView = ({tallyConfigs, tallyData}) => {\n    const [viewPrefs, setViewPrefs] = React.useState({...defaultViewPrefs});\n\n    const differentDay = (dateString1, dateString2) => {\n        if (!dateString1 || !dateString2){\n            return true;\n        }\n        const date1 = new Date(dateString1);\n        const date2 = new Date(dateString2);\n        if (date1.getFullYear() === date2.getFullYear() &&\n            date1.getMonth() === date2.getMonth() &&\n            date1.getDate() === date2.getDate()\n        ){\n            return false;\n        }\n        return true;\n    };\n\n    const displayEvents = (data) => {\n        let display = [];\n        if (data && data.events){\n            let prevEvent;\n            for (let i=data.events.length-1; i>=0; i--){\n                const event = data.events[i];\n\n                // add a divider line between days\n                let borderTop = (prevEvent && differentDay(event, prevEvent)) ? \"solid 1px gray\" : \"none\";\n\n                display.push(\n                    <Col key={i} xs=\"12\" style={{paddingLeft: \"3em\"}}>\n                        <EventDisplay style={{borderTop}} event={event}/>\n                    </Col>\n                );\n                prevEvent = event;\n            }\n        }\n        if (display.length === 0){\n            display.push(<Col xs={12} style={{paddingLeft: \"3em\"}}>(no data)</Col>);\n        }\n        return display;\n    };\n\n    const displayEventsCombined = () => {\n        let allLabels = {};\n        let allEvents = [];\n        tallyConfigs.forEach(config => {\n            allLabels[config.id] = config.label;\n        });\n        tallyData.forEach(tally => {\n            tally.events.forEach(event => {\n                allEvents.push({\n                    event,\n                    label: allLabels[tally.id],\n                })\n            })\n        });\n        let display = [];\n        if (allEvents){\n            allEvents.sort( (a,b) => {\n                return (a.event < b.event) ? -1 : ((a.event > b.event) ? 1 : 0);\n            });\n\n            let prevEvent;\n            for (let i=allEvents.length-1; i>=0; i--){\n                const event = allEvents[i];\n\n                // add a divider line between days\n                let borderTop = (prevEvent && differentDay(event.event, prevEvent.event)) ? \"solid 1px gray\" : \"none\";\n\n                display.push(\n                    <Col key={i} xs=\"12\" style={{paddingLeft: \"1em\"}}>\n                        <EventDisplay style={{borderTop}} event={event.event} label={event.label}/>\n                    </Col>\n                );\n                prevEvent = event;\n            }\n        }\n        if (display.length === 0){\n            display.push(<Col xs={12} style={{paddingLeft: \"1em\"}}>(no data)</Col>);\n        }\n        return display;\n    };\n\n    return (\n        <div className=\"text-left\" style={{paddingLeft: \"2em\", paddingTop: \"1em\"}}>\n            <Form style={{\n                paddingBottom: \"1em\",\n            }}>\n                <Form.Check\n                    type=\"switch\"\n                    id=\"combined-view-switch\"\n                    label=\"Combined view\"\n                    checked={viewPrefs.combinedTallies}\n                    onChange={() => setViewPrefs({...viewPrefs, combinedTallies: !viewPrefs.combinedTallies})}\n                />\n            </Form>\n\n            {viewPrefs.combinedTallies\n                ? displayEventsCombined()\n                : tallyConfigs.map(config => {\n                    return (\n                        <Row key={config.id}>\n                            <Col key={config.id} xs=\"12\" style={{padding: \".5em 0 .5em 1em\", fontWeight: \"bold\"}}>\n                                {config.label}\n                            </Col>\n                            {displayEvents(tallyData.find(data => data.id === config.id))}\n                        </Row>\n                    );\n                })\n            }\n        </div>\n    );\n};\n  \nexport default TallyView;","import '../assets/css/App.css';\nimport '../assets/css/bootstrap.min.css';\nimport React from \"react\";\nimport Header from \"./Header\";\nimport TallyInput from \"./TallyInput\";\nimport TallyView from \"./TallyView\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nvar cloneDeep = require('lodash.clonedeep');\n\nfunction useStickyState(defaultValue, key) {\n    const [value, setValue] = React.useState(() => {\n        const stickyValue = window.localStorage.getItem(key);\n        return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n    });\n    React.useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n    return [value, setValue];\n}\n\nfunction App() {\n\n    let defaultConfigAndData = {\n        id: \"default\",\n        displayName: \"Tally Something!\",\n        tallyConfigs: [{\n            id: \"default\",\n            label: \"My Counter\",\n            buttonLabel: \"Count event!\",\n            lastEvent: null,\n        }],\n        tallyData: [],\n    };\n    defaultConfigAndData = {\n        id: \"default\",\n        displayName: \"Tally\",\n        tallyConfigs: [\n            {\n                id: \"tally1\",\n                label: \"Counter #1\",\n                buttonLabel: \"Count event!\",\n                lastEvent: null,\n            },\n            {\n                id: \"tally2\",\n                label: \"Counter #2\",\n                buttonLabel: \"2nd Counter\",\n                lastEvent: null,\n            },\n        ],\n        tallyData: [],\n    };\n\n    const [data, setData] = useStickyState(defaultConfigAndData, \"tallyData\");\n\n    const recordTally = (tallyId) => {\n        const newData = cloneDeep(data);\n\n        const tally = newData.tallyConfigs.find(tally => tally.id === tallyId);\n        if (!tally){\n            console.error(`recordTally for '${tallyId}': config not found.`);\n            return;\n        }\n\n        let tallyEvents = newData.tallyData.find(eventData => eventData.id === tallyId);\n        if (!tallyEvents){\n            tallyEvents = {\n                id: tallyId,\n                events: [],\n            };\n            newData.tallyData.push(tallyEvents);\n        }\n\n        const now = (new Date()).toISOString();\n        tally.lastEvent = now;\n        tallyEvents.events.push(now);\n        setData(newData);\n    };\n\n    return (\n        <Router basename=\"/tally/\">\n            <div className=\"App text-left\">\n                <Header\n                    brandText={data.displayName}\n                />\n                <Switch>\n                    <Route path=\"/view\">\n                        <TallyView\n                            tallyConfigs={data.tallyConfigs ? data.tallyConfigs : []}\n                            tallyData={data.tallyData ? data.tallyData : []}\n                         />\n                    </Route>\n                    <Route path=\"/\">\n                        <TallyInput\n                            tallyConfigs={data.tallyConfigs ? data.tallyConfigs : []}\n                            recordTally={(id) => recordTally(id)}\n                        />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}